// üìÇ core/applyModules.js ‚Äî —É–ª—É—á—à–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è

import { ModuleDefinitions } from './modules/allModulesRegistry.js';
import { setupActionFlags } from './unitFlags.js';

export function applyModules(unit) {
  if (!Array.isArray(unit.modules)) return;

  // üì¶ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ –ø–æ–ª—è –µ—â—ë –Ω–µ –∑–∞–¥–∞–Ω—ã
  unit.moveTerrain = unit.moveTerrain || [];
  unit.weType = unit.weType || [];

  for (const modName of unit.modules) {
    const mod = ModuleDefinitions[modName];

    if (!mod) {
      console.warn(`‚ö†Ô∏è [applyModules] Module '${modName}' not found in registry.`);
      continue;
    }

    if (typeof mod.effect === 'function') {
      mod.effect(unit);
    } else {
      console.warn(`‚ö†Ô∏è [applyModules] Module '${modName}' has no effect function.`);
    }
  }

  // üß† –ü–æ–≤—Ç–æ—Ä–Ω–æ –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ—Ä—Ä–µ–π–Ω—ã, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
  if (typeof unit.recalculateMobility === 'function') {
    unit.recalculateMobility();
  }

  // üéØ –ü–æ–≤—Ç–æ—Ä–Ω–æ –ø—Ä–∏–º–µ–Ω–∏–º —Ñ–ª–∞–≥–∏
  setupActionFlags(unit);
}
