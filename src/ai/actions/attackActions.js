export class AttackActions {
    constructor(context) {
        this.context = context;
    }

    async executeAttack(unit, target) {
        if (!unit || !target) {
            console.warn('‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —é–Ω–∏—Ç –∏–ª–∏ —Ü–µ–ª—å –¥–ª—è –∞—Ç–∞–∫–∏');
            return null;
        }

        const attackResult = {
            type: 'attack',
            attacker: unit,
            target: target,
            timestamp: new Date(),
            success: this.calculateSuccess(unit, target)
        };

        this.logAttack(attackResult);
        return attackResult;
    }

    async executeAction(action) {
        return this.executeAttack(action.unit, action.target);
    }

    calculateSuccess(unit, target) {
        return unit.strength >= target.strength;
    }

    logAttack(data) {
        console.log(`üó°Ô∏è Attack: ${data.attacker.type} –∞—Ç–∞–∫—É–µ—Ç ${data.target.type} ‚Üí ${data.success ? '–£–°–ü–ï–®–ù–û' : '–ù–ï–£–î–ê–ß–ù–û'}`);

        if (this.context && this.context.updateAttackStats) {
            this.context.updateAttackStats(data);
        }
    }
}    
