// üìã src/setup/setup.js

import { scenarioConfigs } from '../scenarios/scenarioConfigs.js';
import { startGame } from '../core/game.js';
import { mapProfiles } from '../utils/generateMapByProfile.js'; // ‚¨ÜÔ∏è –ü–æ–¥–∫–ª—é—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ä—Ç—ã

export function setupUI() {
  console.log('UI setup initialized');

  const select = document.getElementById('scenario-select');
  const sizeInput = document.getElementById('map-size');
  const enemyInput = document.getElementById('enemy-count');
  const mapTypeSelect = document.getElementById('map-type'); // ‚úîÔ∏è —Å–µ–ª–µ–∫—Ç–æ—Ä —Ç–∏–ø–∞ –∫–∞—Ä—Ç—ã
  const button = document.getElementById('start-button');

  // üîÅ –ó–∞–ø–æ–ª–Ω–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
  Object.values(scenarioConfigs).forEach(cfg => {
    const option = document.createElement('option');
    option.value = cfg.id;
    option.textContent = `${cfg.name} ‚Äî ${cfg.description}`;
    select.appendChild(option);
  });

  // üóë –ó–∞–ø–æ–ª–Ω–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–∏–ø–æ–≤ –∫–∞—Ä—Ç
  Object.entries(mapProfiles).forEach(([key, profile]) => {
    if (key === 'default') return; // –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å alias
    const option = document.createElement('option');
    option.value = key;
    option.textContent = profile.name || key;
    mapTypeSelect.appendChild(option);
  });

  // ‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã
  button.addEventListener('click', () => {
    const scenarioId = select.value;
    const mapSize = parseInt(sizeInput.value);
    const enemyCount = parseInt(enemyInput.value);
    const mapType = mapTypeSelect.value; // ‚úîÔ∏è —Ç–∏–ø –∫–∞—Ä—Ç—ã –∏–∑ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞

    startGame(mapSize, scenarioId, enemyCount, mapType);
  });
}
